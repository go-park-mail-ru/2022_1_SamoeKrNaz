// Code generated by MockGen. DO NOT EDIT.
// Source: attachment_usecase.go

// Package mock_usecases is a generated GoMock package.
package mock_usecases

import (
	models "PLANEXA_backend/models"
	multipart "mime/multipart"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAttachmentUseCase is a mock of AttachmentUseCase interface.
type MockAttachmentUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockAttachmentUseCaseMockRecorder
}

// MockAttachmentUseCaseMockRecorder is the mock recorder for MockAttachmentUseCase.
type MockAttachmentUseCaseMockRecorder struct {
	mock *MockAttachmentUseCase
}

// NewMockAttachmentUseCase creates a new mock instance.
func NewMockAttachmentUseCase(ctrl *gomock.Controller) *MockAttachmentUseCase {
	mock := &MockAttachmentUseCase{ctrl: ctrl}
	mock.recorder = &MockAttachmentUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAttachmentUseCase) EXPECT() *MockAttachmentUseCaseMockRecorder {
	return m.recorder
}

// CreateAttachment mocks base method.
func (m *MockAttachmentUseCase) CreateAttachment(header *multipart.FileHeader, taskId, userId uint) (*models.Attachment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAttachment", header, taskId, userId)
	ret0, _ := ret[0].(*models.Attachment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAttachment indicates an expected call of CreateAttachment.
func (mr *MockAttachmentUseCaseMockRecorder) CreateAttachment(header, taskId, userId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAttachment", reflect.TypeOf((*MockAttachmentUseCase)(nil).CreateAttachment), header, taskId, userId)
}

// DeleteAttachment mocks base method.
func (m *MockAttachmentUseCase) DeleteAttachment(attachId, userId uint) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteAttachment", attachId, userId)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteAttachment indicates an expected call of DeleteAttachment.
func (mr *MockAttachmentUseCaseMockRecorder) DeleteAttachment(attachId, userId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteAttachment", reflect.TypeOf((*MockAttachmentUseCase)(nil).DeleteAttachment), attachId, userId)
}

// GetById mocks base method.
func (m *MockAttachmentUseCase) GetById(attachId, userId uint) (*models.Attachment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetById", attachId, userId)
	ret0, _ := ret[0].(*models.Attachment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetById indicates an expected call of GetById.
func (mr *MockAttachmentUseCaseMockRecorder) GetById(attachId, userId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetById", reflect.TypeOf((*MockAttachmentUseCase)(nil).GetById), attachId, userId)
}
